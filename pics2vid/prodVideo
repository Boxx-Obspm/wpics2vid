#!/bin/bash
# Author: B.Segret, v1.8, 27/10/2014
#                   v1.7,  6/10/2014
# Downloads one list of files from the Internet
# SYNOPSIS
#      ./prodVideo <src> <otp>
# DESCRIPTION
#      -> produces a .flv video movie into <otp> from the pictures in <src>.
#         <otp> is also the working directory (picsTime will be written).
#         Directory $src/temp/ must exit (to receive the video frames).
#         Prefix for the movie title is preset ("TW").
#         Dates and times of the pictures are given by the naming rules of the files.
#         Use of OCTAVE routine pics2dirofpics.m
#         Use of MEncoder with lavc options
#         Use of x264 to get compatibility with Flash players

# heritage: ligne de cron uilisee
# ~/myTinyBots/mtsat2/prodVideo /volumes/esep/ceres/birdy/TWFR_Housekeeping/mtsat2_data ~/myTinyBots/mtsat2
# ex.:
# ~/myTinyBots/wpics2vid/pics2vid/prodVideo ~/myTinyBots/wpics2vid_data NMS ~/myTinyBots
# ~/myTinyBots/wpics2vid/pics2vid/prodVideo ~/myTinyBots/wpics2vid_data Spain ~/myTinyBots
# ~/myTinyBots/wpics2vid/pics2vid/prodVideo ~/myTinyBots/wpics2vid_data SRO ~/myTinyBots
# ~/myTinyBots/wpics2vid/pics2vid/prodVideo ~/myTinyBots/wpics2vid_data AllSKY ~/myTinyBots

#--- 0. get the pictures
# 1. prepare inputs
# 2. produce frames (octave, with forge-statistics)
# 3. encode video (mencoder)
# 4. clean the workspace
loc=`pwd`
run=`dirname $0`

src=$1; # source of pictures
fileprefix=$2;
# fileprefix="NMS";
# fileprefix="Spain";
# fileprefix="SRO";
# fileprefix="AllSKY";
otp=$3; # output directory (and temp files), maybe relative path from $src, anticipate free space

movieprefix="iT_"${fileprefix}; # prefix of the movie without termination (.avi)
wdr=$2; # working directory

cd $run
if [ -f prodVid_t ]; then exit; fi
echo 'in process' > prodVid_t

# 1. prepare inputs
# all pictures will be listed with an absolute date, according to their naming rules
# **** ALSO **** remove all broken files (0 bytes)
ls -1 $src/*${fileprefix}_[1-9]*.jpg | 
  awk -F "/" '{print $NF;}' |
  awk -F "-" '{
	print substr($NF,1,length($NF)-4), length($0), $0;
	}' | 
  sort -n > $src/picsTime

moviename=$movieprefix"_"$(head -1 $src/picsTime | awk '{print $1;}')
moviename=$moviename"_"$(tail -1 $src/picsTime | awk '{print $1;}')

# 2. produce frames (octave)

cd $src
# 3. encode video (mencoder)
mencoder mf://*${fileprefix}_[1-9]*.jpg -mf fps=25:type=jpg -ovc lavc -lavcopts vcodec=mpeg4:mbd=2:trell -oac copy -o $otp/${moviename}.flv
#x264 --crf 24 -o $otp/$movieprefix.flv $otp/${moviename}.flv
cp $otp/${moviename}.flv $otp/$movieprefix.flv
cp $(tail -1 picsTime | awk '{print $NF;}') $otp/$movieprefix.jpg
#NOK# mencoder mf://temp/*.jpg -mf fps=25:type=jpg -ovc lavc -lavcopts vcodec=mpeg4:mbd=2:trell -oac copy -o $otp/${moviename}.mp4
#mencoder mf://temp/*.jpg -mf fps=25:type=jpg -ovc lavc -lavcopts vcodec=flv:mbd=2:trell -oac copy -o $otp/${moviename}.flv

# 4. clean the workspace
#rm -f $src/temp/*
#rmdir $src/temp
cd $loc; cd $run; rm -f prodVid_t

