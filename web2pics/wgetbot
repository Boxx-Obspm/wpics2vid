#!/bin/bash
# Author: B.Segret, v2.2, 02/01/2016
#                   v2.1, 27/10/2014
#                   v2.0, 22/09/2014
# Downloads one list of files from the Internet
# SYNOPSIS
#      ./wgetbot <wget_todo(local)> <wget_log(local)>
# DESCRIPTION
#      -> filelist and destination are given in <wget_todo> (same dir like wgetbot),
#         one line per wanted execution (FIFO preferred)
#         ex.: /destination ../filelist (files must exist, **NO SPACE IN NAMES**)
#      -> wgetbot is executed for <wget_todo>'s 1st line only, then the line is removed
#      -> <wget_log> (same dir like wgetbot) keeps the last N execution of wgetbot (N=20)

# nouvelle version en cours de creation:
# --------------------------------------
# difficile de se rappeler la mise en oeuvre => ameliorer
# - "todo" contient une liste de jobs, un appel de wgetbot execute le premier job de la liste
# - un job = 2 mots, 1er = destination, 2ème = nom de la liste d'URLs (en local par rapport à destination)
# pour accumuler des images de webcams dont le nom ne change pas:
# - la liste URL contient l'adresse de l'image de la webcam
# - sauver l'image sous 2 noms: "<img>_nnn.typ" et "<img>_last.typ" avec nnn = sec. depuis 1/1/1970 (date +%s)
# - à chaque telechargement faire "diff" entre _last et l'image => si pas de retour alors identiques
# - (tenter de garder la date du fichier telecharge, voire de ne telecharger que si different de local)
# - si different alors ajouter _nnn et remplacer _last

# --- ok ---
# - ne telecharge que si nouvelle image
# - verifie que nv image est effectivement differente (comparaison du contenu)



run=`dirname $0`
loc=`pwd`

# Aborts if another instance of the process is running
if [ -f $run/$2_t ]; then exit; fi

dest=/home/birdy/myDevs/data
echo $dest $dest/../adr >> $run/$1


dest=$(head -1 $run/$1 | awk '{print $1}')
flst=$(head -1 $run/$1 | awk '{print $2}')
njob=`expr $(grep -c '' $run/$1) - 1`
if [ "$njob" -eq "-1" ]; then exit; fi

tail -$njob $run/$1 > $run/$1_t
tail -2000 $run/$2 > $run/$2_t
echo '' >> $run/$2_t
echo '\   /\   /\   /\   /\   /\   /\   /\   /\   /\   /' >> $run/$2_t
echo ' \ /  \ /  \ /  \ /  \ /  \ /  \ /  \ /  \ /  \ / ' >> $run/$2_t
echo '  V    V    V    V    V    V    V    V    V    V  ' >> $run/$2_t
echo '' >> $run/$2_t
echo `date "+%Y-%m-%dT%H:%M"` $dest '<-' $flst >> $run/$2_t
echo '--------------------------------------------------' >> $run/$2_t

cd $dest
#ls -1 | grep -v -f - $flst | wget -U "" -nd -N -i - 2> $2_t
wget -U "" -nd -N -i $flst 2> $2_t
#llist=$(awk -F '/' '{print $NF}' $flst)
for ff in $(awk -F '/' '{print $NF}' $flst)
do
  nff=$(echo $ff | awk -F '.' '{print $(NF-1)}')
  sff=$(echo $ff | awk -F '.' '{print $NF}')
  if [ -f ${nff}_last.${sff} ]; then
    isdiff=$(diff ${nff}_last.${sff} ${ff})
    if [ "$isdiff" != "" ]; then
      # nouvelle image telechargee
      cp ${ff} ${nff}_last.${sff}
      ts=$(ls -l --time-style=+%s $ff | awk '{print $6}')
      cp ${ff} ${nff}_${ts}.${sff}
    fi
  else
    cp ${ff} ${nff}_last.${sff}
    ts=$(ls -l --time-style=+%s $ff | awk '{print $6}')
    cp ${ff} ${nff}_${ts}.${sff}
  fi
done
cd $loc
grep -v 'Not Found' $dest/$2_t >> $run/$2_t 
echo '' >> $run/$2_t
echo ' /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /' >> $run/$2_t
echo '/  V  V  V  V  V  V  V  V  V  V  V  V  V  V  V  V ' >> $run/$2_t
echo '--------------------------------------------------' >> $run/$2_t
echo '' >> $run/$2_t

mv -f  $run/$1_t $run/$1
mv -f  $run/$2_t $run/$2

